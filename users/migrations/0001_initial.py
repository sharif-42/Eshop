# Generated by Django 4.1.7 on 2023-03-26 11:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text='User unique email. This is using as username.', max_length=255, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(blank=True, help_text='User first name', max_length=255)),
                ('last_name', models.CharField(blank=True, help_text='User last/nick name', max_length=255)),
                ('phone_number', models.CharField(blank=True, help_text='User Contact Number', max_length=16, verbose_name='Contact Number')),
                ('is_pending', models.BooleanField(default=True, help_text='User activity is pending for some reasons.')),
                ('is_dashboard_user', models.BooleanField(default=False, help_text='User is a dashboard user.')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='is_active')),
                ('is_blocked', models.BooleanField(default=False, help_text='User is blocked by authority for some reasons.')),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ('-id',),
            },
        ),
    ]
